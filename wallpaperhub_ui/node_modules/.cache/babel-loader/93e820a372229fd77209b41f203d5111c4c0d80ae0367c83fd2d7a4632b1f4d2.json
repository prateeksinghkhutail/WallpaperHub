{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Projects\\\\react projects\\\\wallpaperhub\\\\wallpaperhub_ui\\\\src\\\\components\\\\WallpaperByTag.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Wallpaper from \"./Wallpaper\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport ImageService from \"../Services/ImageService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WallpaperByTag = () => {\n  _s();\n  const category = useParams();\n  const [images, setImages] = useState([]);\n  const [tag, setTag] = useState(null);\n  const [loading, setLoading] = useState(false);\n  setTag(category.anime);\n  console.log(tag);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await ImageService.getImagesByTag(tag);\n        //console.log(response.data);\n        setImages(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-20 py-10 \",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n          columnsCountBreakPoints: {\n            350: 1,\n            750: 2,\n            900: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            gutter: \"20px\",\n            children: images.map(image => /*#__PURE__*/_jsxDEV(Wallpaper, {\n              image: image\n            }, image.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(WallpaperByTag, \"dp+2SgFbjfqfaywJFPecNQQLIzg=\", false, function () {\n  return [useParams];\n});\n_c = WallpaperByTag;\nexport default WallpaperByTag;\nvar _c;\n$RefreshReg$(_c, \"WallpaperByTag\");","map":{"version":3,"names":["React","useParams","useEffect","useState","Wallpaper","Masonry","ResponsiveMasonry","ImageService","jsxDEV","_jsxDEV","Fragment","_Fragment","WallpaperByTag","_s","category","images","setImages","tag","setTag","loading","setLoading","anime","console","log","fetchData","response","getImagesByTag","data","error","children","className","columnsCountBreakPoints","gutter","map","image","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Docs/Projects/react projects/wallpaperhub/wallpaperhub_ui/src/components/WallpaperByTag.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Wallpaper from \"./Wallpaper\";\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\nimport ImageService from \"../Services/ImageService\";\r\n\r\nconst WallpaperByTag = () => {\r\n  const category = useParams();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [tag, setTag] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  setTag(category.anime);\r\n  console.log(tag);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await ImageService.getImagesByTag(tag);\r\n        //console.log(response.data);\r\n        setImages(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-black\">\r\n        <div className=\"px-20 py-10 \">\r\n          <ResponsiveMasonry\r\n            columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}\r\n          >\r\n            <Masonry gutter=\"20px\">\r\n              {images.map((image) => (\r\n                <Wallpaper image={image} key={image.id} />\r\n              ))}\r\n            </Masonry>\r\n          </ResponsiveMasonry>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WallpaperByTag;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGb,SAAS,EAAE;EAE5B,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7Ce,MAAM,CAACJ,QAAQ,CAACO,KAAK,CAAC;EACtBC,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;EAChBf,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BJ,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMlB,YAAY,CAACmB,cAAc,CAACT,GAAG,CAAC;QACvD;QACAD,SAAS,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACpB;MACAR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDI,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACvBpB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC3BpB,OAAA,CAACH,iBAAiB;UAChByB,uBAAuB,EAAE;YAAE,GAAG,EAAE,CAAC;YAAE,GAAG,EAAE,CAAC;YAAE,GAAG,EAAE;UAAE,CAAE;UAAAF,QAAA,eAEpDpB,OAAA,CAACJ,OAAO;YAAC2B,MAAM,EAAC,MAAM;YAAAH,QAAA,EACnBd,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBzB,OAAA,CAACL,SAAS;cAAC8B,KAAK,EAAEA;YAAM,GAAMA,KAAK,CAACC,EAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAAC1B,EAAA,CAzCID,cAAc;EAAA,QACDX,SAAS;AAAA;AAAAuC,EAAA,GADtB5B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}